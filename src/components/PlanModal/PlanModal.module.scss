.container {
  padding: 1.5rem;
  max-width: 800px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  position: relative;
  height: calc(100vh - 120px); // Account for modal header/padding
  max-height: 800px;
}

.header {
  flex-shrink: 0; // Prevent header from shrinking

  .message {
    font-size: 1.1rem;
    line-height: 1.6;
    color: var(--text-primary);
    background: var(--bg-subtle);
    padding: 1.5rem;
    border-radius: 12px;
    text-align: center;
    border: 2px solid var(--accent);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
}

.addTaskSection {
  display: flex;
  justify-content: center;
  padding: 0.5rem 0;
  width: 100%;
  flex-shrink: 0; // Prevent button from shrinking
}

.addTaskButton {
  width: 100%;
  font-size: 1.1rem;
  font-weight: 600;
  color: white;
  background: #3b82f6; // Bright blue
  padding: 1rem;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(59, 130, 246, 0.2);

  &:hover {
    background: #2563eb; // Darker blue on hover
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(59, 130, 246, 0.3);
  }

  &:active {
    transform: translateY(0);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.4);
  }
}

.taskListSection {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  flex: 1; // Take up remaining space
  min-height: 0; // Allow content to scroll
  overflow: hidden; // Contain scrolling content
}

.taskListTitle {
  font-size: 1.2rem;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
  padding: 0 0.5rem;
  flex-shrink: 0; // Prevent title from shrinking
}

.emptyMessage {
  text-align: center;
  color: var(--text-secondary);
  padding: 2rem;
  background: var(--bg-subtle);
  border-radius: 8px;
  font-size: 1rem;
  line-height: 1.5;
}

.taskList {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  overflow-y: auto;
  padding: 0.5rem;
  padding-right: 1rem;
  flex: 1; // Take up remaining space
  min-height: 0; // Allow content to scroll

  &::-webkit-scrollbar {
    width: 8px;
  }

  &::-webkit-scrollbar-track {
    background: var(--bg-subtle);
    border-radius: 4px;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--border);
    border-radius: 4px;
  }
}

.taskCard {
  background: white;
  border: 1px solid #e5e7eb;
  border-radius: 8px;
  padding: 1.25rem;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  position: relative;
  overflow: hidden;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
  flex-shrink: 0; // Prevent cards from shrinking

  &::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 4px;
    background: #3b82f6;
    border-radius: 4px 0 0 4px;
  }

  &:hover {
    transform: translateX(4px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    border-color: #3b82f6;
  }
}

.taskInfo {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding-left: 0.75rem;
  flex: 1;
}

.taskName {
  font-size: 1.05rem;
  font-weight: 500;
  color: var(--text-primary);
}

.taskFrequency {
  font-size: 0.9rem;
  color: var(--text-secondary);
  display: flex;
  align-items: center;
  gap: 0.5rem;

  &::before {
    content: 'ðŸ”„';
    font-size: 0.9em;
  }
}

.taskActions {
  display: flex;
  gap: 0.5rem;
  margin-left: auto;
}

.editButton,
.deleteButton {
  background: none;
  border: none;
  padding: 0.5rem;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 1.1rem;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;

  &:hover {
    background: var(--bg-subtle);
    transform: scale(1.1);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--accent-alpha);
  }
}

.confirmDelete {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: white;
  padding: 1.5rem;
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  width: 90%;
  max-width: 400px;
  text-align: center;
  z-index: 10;

  &::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: -1;
  }

  p {
    margin: 0 0 1.5rem;
    font-size: 1rem;
    line-height: 1.5;
    color: var(--text-primary);
  }
}

.confirmActions {
  display: flex;
  gap: 1rem;
  justify-content: center;

  button {
    padding: 0.75rem 1.5rem;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;

    &:focus {
      outline: none;
      box-shadow: 0 0 0 3px var(--accent-alpha);
    }
  }
}

.removeButton {
  background: #ef4444;
  color: white;
  border: none;

  &:hover {
    background: #dc2626;
  }
}

.savingState {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.spinner {
  width: 16px;
  height: 16px;
  border: 2px solid transparent;
  border-top-color: currentColor;
  border-radius: 50%;
  animation: spin 0.6s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.actions {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
  padding-top: 1rem;
  border-top: 1px solid var(--border);
  background: var(--bg-card, white);
  flex-shrink: 0; // Prevent actions from shrinking
  position: sticky;
  bottom: 0;
  margin-top: auto; // Push to bottom if content is short
  z-index: 1; // Ensure it stays above scrolling content
}

.cancelButton,
.saveButton {
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  font-weight: 500;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  min-width: 120px;
  display: flex;
  align-items: center;
  justify-content: center;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px var(--accent-alpha);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    pointer-events: none;
  }
}

.cancelButton {
  background: var(--bg-button);
  border: 1px solid var(--border);
  color: var(--text-primary);

  &:hover:not(:disabled) {
    background: var(--bg-button-hover);
  }
}

.saveButton {
  background: var(--accent);
  border: none;
  color: var(--text-on-accent);

  &:hover:not(:disabled) {
    background: var(--accent-dark);
  }
}

.helperText {
  text-align: center;
  color: var(--text-secondary);
  font-size: 0.9rem;
  font-style: italic;
  margin: 0;
  padding: 0.5rem;
  background: var(--bg-subtle);
  border-radius: 6px;
  flex-shrink: 0;
} 